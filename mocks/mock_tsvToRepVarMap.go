// Code generated by MockGen. DO NOT EDIT.
// Source: libs/maker/tsvToRepVarMap.go

// Package mock_maker is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTsvReader is a mock of TsvReader interface.
type MockTsvReader struct {
	ctrl     *gomock.Controller
	recorder *MockTsvReaderMockRecorder
}

// MockTsvReaderMockRecorder is the mock recorder for MockTsvReader.
type MockTsvReaderMockRecorder struct {
	mock *MockTsvReader
}

// NewMockTsvReader creates a new mock instance.
func NewMockTsvReader(ctrl *gomock.Controller) *MockTsvReader {
	mock := &MockTsvReader{ctrl: ctrl}
	mock.recorder = &MockTsvReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTsvReader) EXPECT() *MockTsvReaderMockRecorder {
	return m.recorder
}

// ReadTsv mocks base method.
func (m *MockTsvReader) ReadTsv(tsvPath string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadTsv", tsvPath)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadTsv indicates an expected call of ReadTsv.
func (mr *MockTsvReaderMockRecorder) ReadTsv(tsvPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadTsv", reflect.TypeOf((*MockTsvReader)(nil).ReadTsv), tsvPath)
}
